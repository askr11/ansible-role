
    #- name: Scan SSH host keys
     # command: ssh-keyscan {{ inventory_hostname }}
      #register: ssh_keyscan_output
      
    #- name: Add SSH host keys to known_hosts file
     # lineinfile:
      #  path: "{{ lookup('env', 'HOME') + '/.ssh/known_hosts' }}"
       # line: "{{ ssh_keyscan_output.stdout_lines }}"
        #create: yes
      #delegate_to: localhost
      
- name: Install build tools and dependencies
  become: true
  apt:
    update_cache: yes
    name:
      - build-essential
      - libjemalloc-dev
      - libhiredis-dev
      #- lua-dev

- name: Clone Redis repository
  git:
    repo: "https://github.com/redis/redis.git"
    dest: "/tmp/redis_install/redis"
    version: "{{ app.version }}"  # Assuming app.version contains the desired Redis version

- name: Build hiredis
  shell:
    cmd: "make && make install"
    chdir: "/tmp/redis_install/redis/deps/hiredis"

- name: Build lua
  shell:
    cmd: "make linux && make install"
    chdir: "/tmp/redis_install/redis/deps/lua"

- name: Build jemalloc
  shell:
    cmd: "./configure && make && make install"
    chdir: "/tmp/redis_install/redis/deps/jemalloc"

- name: Create directory for Redis installation
  file:
    path: "/tmp/redis_install"
    state: directory

- name: Ensure extracted directory exists
  file:
    path: "/tmp/redis_install/{{ app.appname }}-{{ app.version }}"
    state: directory
    recurse: yes

- name: Build and install Redis
  shell:
    cmd: "make MALLOC=jemalloc && make install MALLOC=jemalloc"
    chdir: "/tmp/redis_install/{{ app.appname }}-{{ app.version }}"
  notify: restart

- name: Configure Redis
  template:
    src: "conf.j2"
    dest: "/tmp/redis_install/{{ app.appname }}-{{ app.version }}/conf/redis.conf"
  become: true

- name: Remove temporary directory
  file:
    path: "/tmp/redis_install"
    state: absent

